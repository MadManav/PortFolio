@import url('https://fonts.googleapis.com/css2?family=Oswald:wght@700&display=swap');

.skills {
  height: 100vh; /* Full viewport height */
  padding: 1rem 2rem;
  overflow: hidden;
  background: linear-gradient(rgba(0,0,0,0.7),rgba(0,0,0,0.7)),
    url("../assets/images/bg2.jpg") center/cover fixed;
  position: relative;
  border-bottom: 3px solid var(--color-border);
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
}

.skills__title {
  text-align: center;
  font-family: 'Oswald', sans-serif;
  font-size: 3rem;
  text-transform: uppercase;
  color: transparent;
  margin-top: -2rem; /* Moves title upward */
  margin-bottom: 1rem;
  display: inline-block;
  width: 100%;
  background: url(https://i.ibb.co/RDTnNrT/animated-text-fill.png) repeat-y;
  -webkit-background-clip: text;
  background-clip: text;
  -webkit-text-fill-color: transparent;
  animation: aitf 80s linear infinite;
  text-shadow: 0 0 80px rgba(255,255,255,0.5);
  padding: 0.25em 0;
}

@keyframes aitf {
  0% { background-position: 0% 50%; }
  100% { background-position: 100% 50%; }
}

/* Refined SVG animations */
.skills__icon {
  width: 60px;
  height: 60px;
  margin-bottom: 1rem;
  position: relative;
  z-index: 1;
  transition: transform 0.5s cubic-bezier(0.19, 1, 0.22, 1);
  will-change: transform;
}

/* Subtle entry animation for SVGs */
.skills__card .skills__icon {
  animation: iconEntry 0.8s cubic-bezier(0.215, 0.61, 0.355, 1) backwards;
}

@keyframes iconEntry {
  from {
    opacity: 0;
    transform: translateY(10px) scale(0.9);
  }
  to {
    opacity: 1;
    transform: translateY(0) scale(1);
  }
}

/* Stagger the SVG animations */
.skills__card:nth-child(3n+1) .skills__icon {
  animation-delay: 0.1s;
}

.skills__card:nth-child(3n+2) .skills__icon {
  animation-delay: 0.2s;
}

.skills__card:nth-child(3n+3) .skills__icon {
  animation-delay: 0.3s;
}

/* Clean modern hover effect */
.skills__card:hover .skills__icon {
  transform: translateY(-8px);
}

/* Add subtle reveal interaction */
.skills__card::after {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: radial-gradient(
    circle at var(--x, 50%) var(--y, 50%),
    rgba(var(--color-accent-rgb), 0.1) 0%,
    transparent 60%
  );
  opacity: 0;
  transition: opacity 0.4s ease;
  z-index: 0;
  border-radius: 15px;
  pointer-events: none;
}

.skills__card:hover::after {
  opacity: 1;
}

/* Mouse follow effect - requires JS to update --x and --y */
/* Add this JS to your component:
  document.querySelectorAll('.skills__card').forEach(card => {
    card.addEventListener('mousemove', e => {
      const rect = card.getBoundingClientRect();
      const x = ((e.clientX - rect.left) / rect.width) * 100;
      const y = ((e.clientY - rect.top) / rect.height) * 100;
      card.style.setProperty('--x', `${x}%`);
      card.style.setProperty('--y', `${y}%`);
    });
  });
*/

/* Clean card styling */
.skills__card {
  display: flex;
  flex-direction: column;
  align-items: center;
  background: var(--color-secondary);
  padding: 1.5rem;
  border-radius: 15px;
  border: 1px solid rgba(255, 255, 255, 0.1);
  box-shadow: 0 4px 20px rgba(0, 0, 0, 0.15);
  transition: all 0.4s cubic-bezier(0.19, 1, 0.22, 1);
  opacity: 0;
  transform: translateY(20px);
  animation: cardAppear 0.5s cubic-bezier(0.19, 1, 0.22, 1) forwards;
  position: relative;
  overflow: hidden;
}

.skills__card:nth-child(2n) {
  animation-delay: 0.15s;
}

.skills__card:nth-child(3n) {
  animation-delay: 0.3s;
}

@keyframes cardAppear {
  from { opacity: 0; transform: translateY(20px); }
  to { opacity: 1; transform: translateY(0); }
}

.skills__card:hover {
  transform: translateY(-10px);
  box-shadow: 0 10px 30px rgba(0, 0, 0, 0.25);
  border-color: rgba(var(--color-accent-rgb), 0.5);
  z-index: 2;
}

/* Add 3D tilt effect - minimal version */
.skills__card:hover {
  transform: translateY(-8px) perspective(1000px) rotateX(2deg);
}

.skills__name {
  font-family: var(--font-body);
  font-size: 1rem;
  color: var(--color-text);
  position: relative;
  z-index: 1;
  transition: all 0.3s ease;
}

.skills__card:hover .skills__name {
  color: var(--color-accent);
}

.skills__underline {
  animation: underlineExpand 0.8s cubic-bezier(0.4, 0, 0.2, 1) forwards;
}

@keyframes underlineExpand {
  from { width: 0; opacity: 0; }
  to { width: 50px; opacity: 1; }
}

/* Container grid for skills */
.skills__container {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(320px, 1fr));
  gap: 2rem;
  max-width: 1200px;
  margin: 0 auto;
}

/* Simplified category animation with staggered delay */
.skills__category {
  background: var(--color-bg);
  padding: 1.5rem;
  border-radius: 20px;
  box-shadow: 0 10px 30px rgba(0, 0, 0, 0.15);
  opacity: 0;
  transform: translateY(20px);
  animation: fadeInUp 0.6s cubic-bezier(0.19, 1, 0.22, 1) forwards;
  border: 1px solid rgba(255, 255, 255, 0.05);
}

.skills__category:nth-child(2) {
  animation-delay: 0.2s;
}

.skills__category:nth-child(3) {
  animation-delay: 0.4s;
}

@keyframes fadeInUp {
  from { opacity: 0; transform: translateY(20px); }
  to { opacity: 1; transform: translateY(0); }
}

.skills__category-title {
  color: var(--color-accent);
  font-family: var(--font-heading);
  font-size: 1.5rem;
  margin-bottom: 1.5rem;
  position: relative;
  padding-bottom: 0.5rem;
  display: inline-block;
}

.skills__category-title::after {
  content: '';
  position: absolute;
  left: 0;
  bottom: 0;
  width: 40px;
  height: 3px;
  background: var(--color-accent);
  transition: width 0.3s ease;
}

.skills__category:hover .skills__category-title::after {
  width: 100%;
}

.skills__grid {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(100px, 1fr));
  gap: 2rem;
}

/* SVG animation states */
.skills__card:nth-child(1) .skills__icon path {
  transition: fill 0.3s ease;
}

.skills__card:hover .skills__icon path:not([fill="none"]) {
  fill: var(--color-accent);
}

/* Fixed responsive styling for mobile */
@media (max-width: 768px) {
  .skills {
    height: auto;
    min-height: 100vh;
    padding: 80px 1rem 2rem; /* Account for navbar and title */
    overflow: visible;
  }

  .skills__container {
    display: block;
    overflow: visible;
    height: auto;
    scroll-snap-type: none;
  }

  .skills__category {
    min-height: auto;
    padding: 2rem 1rem;
    margin-bottom: 2rem;
    border-radius: 15px;
    animation: none !important;
    transform: none !important;
    opacity: 1 !important;
  }

  .skills__title {
    position: static;
    font-size: 2.5rem;
    margin: 0 0 2rem 0;
    padding: 0;
    /* Fix: Keep the text fill animation on mobile */
    background: url(https://i.ibb.co/RDTnNrT/animated-text-fill.png) repeat-y;
    -webkit-background-clip: text;
    background-clip: text;
    -webkit-text-fill-color: transparent;
    animation: aitf 80s linear infinite;
    text-shadow: 0 0 40px rgba(255, 255, 255, 0.6);
    color: var(--color-accent); /* Fallback color */
  }

  .skills__grid {
    grid-template-columns: repeat(2, 1fr);
    gap: 1.5rem;
    max-width: 500px;
    margin: 0 auto;
  }

  .skills__card {
    min-height: 120px;
    padding: 1.5rem;
    margin: 0;
    opacity: 1;
    animation: none;
    transform: none;
  }

  /* Mobile-specific subtle animations */
  .skills__icon {
    width: 50px;
    height: 50px;
    animation: floatIcon 3s infinite ease-in-out alternate !important;
  }
  
  @keyframes floatIcon {
    0% { transform: translateY(0); }
    100% { transform: translateY(-5px); }
  }

  /* Stagger the mobile animations */
  .skills__card:nth-child(odd) .skills__icon {
    animation-delay: 0s !important;
  }
  
  .skills__card:nth-child(even) .skills__icon {
    animation-delay: 0.5s !important;
  }

  /* Add in App.css */
  .content {
    padding-top: 60px; /* Space for fixed navbar */
  }
}

/* Add CSS variables for accent color if not already defined */
:root {
  --color-accent-rgb: 64, 196, 255; /* Default blue accent color in RGB format */
}

/* Add this for scrolling effect */
@media (min-width: 769px) {
  .skills__category:nth-child(odd) {
    transform: translateX(-20px);
  }
  
  .skills__category:nth-child(even) {
    transform: translateX(20px);
  }
  
  .skills__category {
    opacity: 0;
    transition: all 0.8s cubic-bezier(0.19, 1, 0.22, 1);
  }
  
  .skills__category.in-view {
    opacity: 1;
    transform: translateX(0);
  }
  
  /* Add this JS to your component:
  const observerOptions = {
    threshold: 0.2,
    rootMargin: "0px 0px -20% 0px"
  };
  
  const observer = new IntersectionObserver((entries) => {
    entries.forEach(entry => {
      if (entry.isIntersecting) {
        entry.target.classList.add('in-view');
        observer.unobserve(entry.target);
      }
    });
  }, observerOptions);
  
  document.querySelectorAll('.skills__category').forEach(category => {
    observer.observe(category);
  });
  */
}